// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(FootballContext))]
    partial class FootballContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("StadiumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StadiumId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("DAL.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BornDate = new DateTime(1997, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2016, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Виктор Цыганков",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            BornDate = new DateTime(1997, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2018, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Миккель Дуэлунд",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            BornDate = new DateTime(1995, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2019, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Жерсон Родригес",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            BornDate = new DateTime(1993, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2017, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Беньямин Вербич",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            BornDate = new DateTime(1988, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2017, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Денис Бойко",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            BornDate = new DateTime(1988, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2013, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Тайсон Барселлос Фреда",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            BornDate = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2019, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Тете",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 8,
                            BornDate = new DateTime(1987, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2018, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Жуниор Мораес",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 9,
                            BornDate = new DateTime(1984, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2006, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Андрей Пятов",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 10,
                            BornDate = new DateTime(1988, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContractDate = new DateTime(2014, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Марлос",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("DAL.Models.Stadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 70050,
                            City = "Киев",
                            Name = "Олимпийский"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 52667,
                            City = "Донецк",
                            Name = "Донбасс Арена"
                        });
                });

            modelBuilder.Entity("DAL.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Киев",
                            CountPlayers = 5,
                            Name = "Динамо"
                        },
                        new
                        {
                            Id = 2,
                            City = "Донецк",
                            CountPlayers = 5,
                            Name = "Шахтер"
                        });
                });

            modelBuilder.Entity("DAL.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Украинская премьер лига",
                            Region = "Украина",
                            Start = new DateTime(2019, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DAL.Models.Match", b =>
                {
                    b.HasOne("DAL.Models.Stadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Tournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.Player", b =>
                {
                    b.HasOne("DAL.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
